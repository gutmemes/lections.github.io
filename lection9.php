<?php 

include('index.php');
    
?>

    <div class="lections">
    <h3>Статический SQL</h3>

<p>Статический SQL встраивается в виде препроцессорной обработки в традиционные языки программирования.</p>

<p>Операторы SQL обрабатываются прекомпилятором.</p>

<p>В SQL-операторах могут использоваться переменные из прикладной программы.</p>

<p>Операторы:</p>
<pre><span class="keywords_red">
DECLARE CURSOR - определяет запрос;

OPEN и CLOSE - начинает и завершает процесс обработки.
</span></pre>
<p>Приведем пример приложения, использующего статический SQL:</p>
<pre><span class="keywords_red">
main()
// Включение структуры для обработки ошибок
{    EXEC SQL INCLUDE SQLCA;
// Объявление хост-переменных 
// (связи и INTO-переменные)
     EXEC SQL BEGIN DECLARE SECTION;
     int NumIndID;
     int NumID;       // Эти переменные
     // указываются после символа :
char Sal[10];
     EXEC SQL END DECLARE SECTION;
// Обработка ошибок
     EXEC SQL WHENEVER SQLERROR GOTO err_1;
     EXEC SQL WHENEVER NOT FOUND GOTO err_2;
// Запрос параметров
printf ("Type individual number: ");
scanf("%d",&NumIndID);
// Выполнение SQL запроса
EXEC SQL SELECT NumID, Sal FROM tbl1
     WHERE NumIndID =: NumIndID
     INTO :NumID, :Sal;
// Отображение результата
     std::cout<< "Number: "<< NumID;
     exit(0);
err_1:
     std::cout<<'' SQLERROR'';
     exit(1);
err_2:
     std::cout<<'' NOT FOUND";
     exit(1); }
</span></pre>
<p>Типы данных преобразуются автоматически для каждой СУБД.</p>

<p>СУБД возвращает информацию об ошибках через специальные переменные: структуру SQL Communication AREA ( SQLCA ), переменную SQLSTATE или SQLCODE.</p>

<p>Теперь рассмотрим более подробно синтаксис языка встроенного SQL.</p>

<p>Фактически, чтобы приложение могло обращаться к базе данных, существуют четыре основных варианта:</p>
<ul>
    <li>встраивание в код некоторого языка программирования SQL-операторов (статический SQL);</li>
    <li>формирование в процессе выполнения программы на некотором языке программирования кода SQL-операторов и дальнейшего их выполнения (динамический SQL);</li>
    <li>вызов из программ, написанных на других языках программирования, SQL-модулей, которые представляют собой код на языке SQL;</li>
    <li>использование API (Application Programming Interface), позволяющего реализовывать работу с базой данных через предоставляемый набор функций. API может быть целевым, предоставленным производителем коммерческой СУБД для работы именно </li>с этой базой данных, или межплатформенным, реализующим унифицированные средства доступа к СУБД различных производителей. <li>К такому API относятся ODBC (Open DataBase Connectivity) и SQL/CLI (SQL Call Level Interface).</li>
</ul>
<h3>Основная программа</h3>

<p>Основной программой, или HOST-программой, называется программа, в которую встраиваются SQL-операторы.</p>

<p>Встраиваемый SQL-оператор указывается после фразы EXEC SQL.</p>

<p>Стандартом SQL-92 предусмотрена возможность встраивания SQL-операторов в следующие языки программирования: C, Pascal, Java (SQLJ), Ada, Cobol, Fortran, PL/1, M.</p>

<p>На следующей схеме изображен процесс выполнения программы, содержащей операторы встроенного SQL.</p>
<img src="lect9.gif" alt="">
<p>На первом этапе исходный код обрабатывается прекомпилятором, иногда также называемым препроцессором. Интегрированные среды программирования включают в свой состав прекомпиляторы для встроенного SQL. В результате действий прекомпилятора происходит замена операторов встроенного SQL и создание отдельного модуля доступа. Далее, после компиляции и линкования, получается выполнимый код. На этапе связывания происходит обработка модуля доступа и для входящих в него SQL-операторов строится план выполнения. Построение плана выполнения на этапе компиляции выполнимого кода отличает статический встроенный SQL от динамического SQL.

Таким образом, выполнение SQL-оператора было последовательно заменено на вызов внешней процедуры, которая затем была связана с библиотекой СУБД. Поэтому на этапе выполнения библиотечные вызовы будут передаваться непосредственно СУБД.

При выполнении программы со встроенным SQL могут быть использованы привилегии как выполняющего, так и владеющего пользователя (того, кто создал выполнимый файл). В современных коммерческих СУБД, как правило, относительно хранимых в базе данных модулей, существует возможность назначения привилегии EXECUTE таким образом, чтобы при выполнении модуля использовались привилегии его владельца.</p>
    </div>
</body>
</html>